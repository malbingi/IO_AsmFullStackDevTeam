// Relationships between methods and files(in Python files are modules)
digraph {
	create_logger [color=blue]
	"logger.py" [color=red shape=square]
	create_logger -> "logger.py" [color=blue penwidth=5]
	show_version [color=blue]
	"cli.py" [color=red shape=square]
	show_version -> "cli.py" [color=blue penwidth=5]
	change_loglevel [color=blue]
	"cli.py" [color=red shape=square]
	change_loglevel -> "cli.py" [color=blue penwidth=5]
	enable_color [color=blue]
	"cli.py" [color=red shape=square]
	enable_color -> "cli.py" [color=blue penwidth=5]
	set_true_color [color=blue]
	"cli.py" [color=red shape=square]
	set_true_color -> "cli.py" [color=blue penwidth=5]
	get_width [color=blue]
	"cli.py" [color=red shape=square]
	get_width -> "cli.py" [color=blue penwidth=5]
	verify_style_name [color=blue]
	"cli.py" [color=red shape=square]
	verify_style_name -> "cli.py" [color=blue penwidth=5]
	cli [color=blue]
	"cli.py" [color=red shape=square]
	cli -> "cli.py" [color=blue penwidth=5]
	_build_color_table [color=blue]
	"colormap.py" [color=red shape=square]
	_build_color_table -> "colormap.py" [color=blue penwidth=5]
	get_handler [color=blue]
	"cli.py" [color=red shape=square]
	get_handler -> "cli.py" [color=blue penwidth=5]
	__init__ [color=blue]
	"styler.py" [color=red shape=square]
	__init__ -> "styler.py" [color=blue penwidth=5]
	to_rgb [color=blue]
	"colormap.py" [color=red shape=square]
	to_rgb -> "colormap.py" [color=blue penwidth=5]
	from_rgb [color=blue]
	"colormap.py" [color=red shape=square]
	from_rgb -> "colormap.py" [color=blue penwidth=5]
	reshade [color=blue]
	"colormap.py" [color=red shape=square]
	reshade -> "colormap.py" [color=blue penwidth=5]
	scale [color=blue]
	"colormap.py" [color=red shape=square]
	scale -> "colormap.py" [color=blue penwidth=5]
	color [color=blue]
	"colormap.py" [color=red shape=square]
	color -> "colormap.py" [color=blue penwidth=5]
	_closest_color [color=blue]
	"colormap.py" [color=red shape=square]
	_closest_color -> "colormap.py" [color=blue penwidth=5]
	_color_index [color=blue]
	"colormap.py" [color=red shape=square]
	_color_index -> "colormap.py" [color=blue penwidth=5]
	__str__ [color=blue]
	"escapeseq.py" [color=red shape=square]
	__str__ -> "escapeseq.py" [color=blue penwidth=5]
	__repr__ [color=blue]
	"escapeseq.py" [color=red shape=square]
	__repr__ -> "escapeseq.py" [color=blue penwidth=5]
	__enter__ [color=blue]
	"styler.py" [color=red shape=square]
	__enter__ -> "styler.py" [color=blue penwidth=5]
	__exit__ [color=blue]
	"styler.py" [color=red shape=square]
	__exit__ -> "styler.py" [color=blue penwidth=5]
	fg [color=blue]
	"styler.py" [color=red shape=square]
	fg -> "styler.py" [color=blue penwidth=5]
	bg [color=blue]
	"styler.py" [color=red shape=square]
	bg -> "styler.py" [color=blue penwidth=5]
	escape [color=blue]
	"escapeseq.py" [color=red shape=square]
	escape -> "escapeseq.py" [color=blue penwidth=5]
	low_color_string [color=blue]
	"escapeseq.py" [color=red shape=square]
	low_color_string -> "escapeseq.py" [color=blue penwidth=5]
	true_color_string [color=blue]
	"escapeseq.py" [color=red shape=square]
	true_color_string -> "escapeseq.py" [color=blue penwidth=5]
	reset_string [color=blue]
	"escapeseq.py" [color=red shape=square]
	reset_string -> "escapeseq.py" [color=blue penwidth=5]
	full_reset_string [color=blue]
	"escapeseq.py" [color=red shape=square]
	full_reset_string -> "escapeseq.py" [color=blue penwidth=5]
	emit [color=blue]
	"logger.py" [color=red shape=square]
	emit -> "logger.py" [color=blue penwidth=5]
	debug_tag [color=blue]
	"renderer.py" [color=red shape=square]
	debug_tag -> "renderer.py" [color=blue penwidth=5]
	render [color=blue]
	"renderer.py" [color=red shape=square]
	render -> "renderer.py" [color=blue penwidth=5]
	dispatch [color=blue]
	"styler.py" [color=red shape=square]
	dispatch -> "styler.py" [color=blue penwidth=5]
	wrap_paragraphs [color=blue]
	"renderer.py" [color=red shape=square]
	wrap_paragraphs -> "renderer.py" [color=blue penwidth=5]
	prefix [color=blue]
	"renderer.py" [color=red shape=square]
	prefix -> "renderer.py" [color=blue penwidth=5]
	document [color=blue]
	"renderer.py" [color=red shape=square]
	document -> "renderer.py" [color=blue penwidth=5]
	paragraph [color=blue]
	"renderer.py" [color=red shape=square]
	paragraph -> "renderer.py" [color=blue penwidth=5]
	text [color=blue]
	"renderer.py" [color=red shape=square]
	text -> "renderer.py" [color=blue penwidth=5]
	linebreak [color=blue]
	"renderer.py" [color=red shape=square]
	linebreak -> "renderer.py" [color=blue penwidth=5]
	softbreak [color=blue]
	"renderer.py" [color=red shape=square]
	softbreak -> "renderer.py" [color=blue penwidth=5]
	thematic_break [color=blue]
	"renderer.py" [color=red shape=square]
	thematic_break -> "renderer.py" [color=blue penwidth=5]
	emph [color=blue]
	"renderer.py" [color=red shape=square]
	emph -> "renderer.py" [color=blue penwidth=5]
	strong [color=blue]
	"renderer.py" [color=red shape=square]
	strong -> "renderer.py" [color=blue penwidth=5]
	heading [color=blue]
	"styler.py" [color=red shape=square]
	heading -> "styler.py" [color=blue penwidth=5]
	list [color=blue]
	"renderer.py" [color=red shape=square]
	list -> "renderer.py" [color=blue penwidth=5]
	item [color=blue]
	"renderer.py" [color=red shape=square]
	item -> "renderer.py" [color=blue penwidth=5]
	code [color=blue]
	"renderer.py" [color=red shape=square]
	code -> "renderer.py" [color=blue penwidth=5]
	code_block [color=blue]
	"renderer.py" [color=red shape=square]
	code_block -> "renderer.py" [color=blue penwidth=5]
	block_quote [color=blue]
	"renderer.py" [color=red shape=square]
	block_quote -> "renderer.py" [color=blue penwidth=5]
	link [color=blue]
	"renderer.py" [color=red shape=square]
	link -> "renderer.py" [color=blue penwidth=5]
	image [color=blue]
	"renderer.py" [color=red shape=square]
	image -> "renderer.py" [color=blue penwidth=5]
	html_inline [color=blue]
	"renderer.py" [color=red shape=square]
	html_inline -> "renderer.py" [color=blue penwidth=5]
	html_block [color=blue]
	"renderer.py" [color=red shape=square]
	html_block -> "renderer.py" [color=blue penwidth=5]
	get_style_by_name [color=blue]
	"styler.py" [color=red shape=square]
	get_style_by_name -> "styler.py" [color=blue penwidth=5]
	eseq_from_pygments [color=blue]
	"styler.py" [color=red shape=square]
	eseq_from_pygments -> "styler.py" [color=blue penwidth=5]
	entering [color=blue]
	"styler.py" [color=red shape=square]
	entering -> "styler.py" [color=blue penwidth=5]
	exiting [color=blue]
	"styler.py" [color=red shape=square]
	exiting -> "styler.py" [color=blue penwidth=5]
	cm [color=blue]
	"styler.py" [color=red shape=square]
	cm -> "styler.py" [color=blue penwidth=5]
	__getattr__ [color=blue]
	"styler.py" [color=red shape=square]
	__getattr__ -> "styler.py" [color=blue penwidth=5]
	stylize [color=blue]
	"styler.py" [color=red shape=square]
	stylize -> "styler.py" [color=blue penwidth=5]
	_default [color=blue]
	"styler.py" [color=red shape=square]
	_default -> "styler.py" [color=blue penwidth=5]
	push [color=blue]
	"styler.py" [color=red shape=square]
	push -> "styler.py" [color=blue penwidth=5]
	pop [color=blue]
	"styler.py" [color=red shape=square]
	pop -> "styler.py" [color=blue penwidth=5]
	"os - [lib]" [color=red]
	"os - [lib]" -> "cli.py" [color=yellow penwidth=5]
	"sys - [lib]" [color=red]
	"sys - [lib]" -> "renderer.py" [color=yellow penwidth=5]
	"click - [lib]" [color=red]
	"click - [lib]" -> "cli.py" [color=yellow penwidth=5]
	"logging - [lib]" [color=red]
	"logging - [lib]" -> "styler.py" [color=yellow penwidth=5]
	"logger.py" [color=red]
	"logger.py" -> "cli.py" [color=yellow penwidth=5]
	"colormap.py" [color=red]
	"colormap.py" -> "styler.py" [color=yellow penwidth=5]
	"escapeseq.py" [color=red]
	"escapeseq.py" -> "styler.py" [color=yellow penwidth=5]
	"re - [lib]" [color=red]
	"re - [lib]" -> "renderer.py" [color=yellow penwidth=5]
	"textwrap - [lib]" [color=red]
	"textwrap - [lib]" -> "renderer.py" [color=yellow penwidth=5]
	"commonmark - [lib]" [color=red]
	"commonmark - [lib]" -> "renderer.py" [color=yellow penwidth=5]
	"pygments - [lib]" [color=red]
	"pygments - [lib]" -> "styler.py" [color=yellow penwidth=5]
	"pygments.lexers - [lib]" [color=red]
	"pygments.lexers - [lib]" -> "renderer.py" [color=yellow penwidth=5]
	"pygments.styles - [lib]" [color=red]
	"pygments.styles - [lib]" -> "styler.py" [color=yellow penwidth=5]
	"pygments.formatters - [lib]" [color=red]
	"pygments.formatters - [lib]" -> "renderer.py" [color=yellow penwidth=5]
	"styler.py" [color=red]
	"styler.py" -> "renderer.py" [color=yellow penwidth=5]
	"copy - [lib]" [color=red]
	"copy - [lib]" -> "styler.py" [color=yellow penwidth=5]
	"renderer.py" [color=red]
	"renderer.py" -> "__init__.py" [color=yellow penwidth=5]
}
